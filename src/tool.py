'''
Created on Sep 8, 2010

@author: Michael Liao
'''

import os
import logging
from Cheetah.Template import Template

def compile_view(root_path):
    '''
    Compile all cheetah template to py files. Only work on local.
    '''
    autogen_path = os.path.join(root_path, 'autogen')
    all_subdirs = os.listdir(root_path)
    subdirs = [sub for sub in all_subdirs if os.path.isdir(os.path.join(root_path, sub, 'view'))]
    subdirs.sort()
    for sub in subdirs:
        __compile_dir(sub, os.path.join(root_path, 'view'), autogen_path)

def __compile_dir(modname, view_path, autogen_path):
    '''
    Compile a module which contains 'view' dir
    '''
    dist_path = os.path.join(autogen_path, modname)
    os.makedirs(dist_path)
    __gen_init_py(autogen_path)
    __gen_init_py(dist_path)
    files = os.listdir(view_path)
    views = [os.path.join(view_path, f) for f in files if f.endswith('.html') and os.path.isfile(os.path.join(view_path, f))]
    views.sort()
    for v in views:
        __compile_file(modname, autogen_path, v)

def __compile_file(modname, autogen_path, file_path):
    logging.info('Compile %s...' % file_path)
    cc = Template.compile(file=file_path, source=None, returnAClass=False, moduleName='autogen.' + modname, className='CompiledTemplate')
    name = os.path.basename(file_path)[:-4] + 'py'
    file = os.path.join(autogen_path, modname, name)
    f = open(file, 'w')
    f.write(cc)
    f.close()

def __mkdir(path):
    if path.isdir(path):
        return
    os.makedirs(path)

def __gen_init_py(package_path):
    file = open(os.path.join(package_path, '__init__.py'), 'w')
    file.write(r'''#!/usr/bin/env python
# -*- coding: utf-8 -*-

__author__ = 'Michael Liao (askxuefeng@gmail.com)'

#
# DO NOT modify this file because it was generated by 'compile_view'
#
''')
    file.close()

if __name__ == '__main__':
    compile_view(os.path.split(__file__)[0])
